<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.5.1"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xmlns:rx="clr-namespace:Bonsai.Reactive;assembly=Bonsai.Core"
                 xmlns:scr="clr-namespace:Bonsai.Scripting;assembly=Bonsai.Scripting"
                 xmlns:dsp="clr-namespace:Bonsai.Dsp;assembly=Bonsai.Dsp"
                 xmlns:wie="clr-namespace:Bonsai.Windows.Input;assembly=Bonsai.Windows.Input"
                 xmlns="https://bonsai-rx.org/2018/workflow">
  <Workflow>
    <Nodes>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="wie:MouseMove" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Timer">
          <rx:DueTime>PT0S</rx:DueTime>
          <rx:Period>PT0.1S</rx:Period>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Sample" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:CombineLatest" />
      </Expression>
      <Expression xsi:type="MemberSelector">
        <Selector>Item1.EventArgs.X,Item1.EventArgs.Y</Selector>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Skip">
          <rx:Count>1</rx:Count>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Zip" />
      </Expression>
      <Expression xsi:type="scr:PythonTransform">
        <scr:Name>SpeedComputation</scr:Name>
        <scr:Script>import math
@returns(float)
def process(value):
  speed = math.sqrt(((value.Item1.Item1-value.Item2.Item1)**2)+((value.Item1.Item2-value.Item2.Item2)**2))
  return float(speed)</scr:Script>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="dsp:Buffer">
          <dsp:Count>120</dsp:Count>
          <dsp:Skip xsi:nil="true" />
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="dsp:Average" />
      </Expression>
      <Expression xsi:type="MemberSelector">
        <Selector>Val0</Selector>
      </Expression>
      <Expression xsi:type="scr:PythonTransform">
        <scr:Name>Movement Threshold</scr:Name>
        <scr:Script>@returns(bool)
def process(value):
  # motion threshold determine which quantity of movement will be considered as non-immobility
  motion_threshold = 5;
  if value&lt;motion_threshold:
    output=True
  else:
    output=False
  return output</scr:Script>
      </Expression>
    </Nodes>
    <Edges>
      <Edge From="0" To="2" Label="Source1" />
      <Edge From="1" To="3" Label="Source2" />
      <Edge From="1" To="2" Label="Source2" />
      <Edge From="2" To="3" Label="Source1" />
      <Edge From="3" To="4" Label="Source1" />
      <Edge From="4" To="5" Label="Source1" />
      <Edge From="4" To="6" Label="Source2" />
      <Edge From="5" To="6" Label="Source1" />
      <Edge From="6" To="7" Label="Source1" />
      <Edge From="7" To="8" Label="Source1" />
      <Edge From="8" To="9" Label="Source1" />
      <Edge From="9" To="10" Label="Source1" />
      <Edge From="10" To="11" Label="Source1" />
    </Edges>
  </Workflow>
</WorkflowBuilder>